// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MainContainer Routes All Routes Validates all routes 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Switch>
    <Route
        component={[Function]}
        exact={true}
        path="/"
    />
    <Route
        component={[Function]}
        path="/list/all"
    />
    <Route
        component={[Function]}
        path="/list/:id/view"
    />
    <Route
        component={[Function]}
        path="/list"
    />
    <Route
        component={[Function]}
        path="/project/all"
    />
    <Route
        component={[Function]}
        path="/project/update/:id"
    />
    <Route
        component={[Function]}
        path="/project/update"
    />
</Switch>,
  "nodes": Array [
    <Switch>
      <Route
            component={[Function]}
            exact={true}
            path="/"
      />
      <Route
            component={[Function]}
            path="/list/all"
      />
      <Route
            component={[Function]}
            path="/list/:id/view"
      />
      <Route
            component={[Function]}
            path="/list"
      />
      <Route
            component={[Function]}
            path="/project/all"
      />
      <Route
            component={[Function]}
            path="/project/update/:id"
      />
      <Route
            component={[Function]}
            path="/project/update"
      />
</Switch>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <Main />,
      "_debugID": 15,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {},
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 8,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <Switch>
          <Route
                    component={[Function]}
                    exact={true}
                    path="/"
          />
          <Route
                    component={[Function]}
                    path="/list/all"
          />
          <Route
                    component={[Function]}
                    path="/list/:id/view"
          />
          <Route
                    component={[Function]}
                    path="/list"
          />
          <Route
                    component={[Function]}
                    path="/project/all"
          />
          <Route
                    component={[Function]}
                    path="/project/update/:id"
          />
          <Route
                    component={[Function]}
                    path="/project/update"
          />
</Switch>,
        "_debugID": 16,
        "_renderedOutput": <Switch>
          <Route
                    component={[Function]}
                    exact={true}
                    path="/"
          />
          <Route
                    component={[Function]}
                    path="/list/all"
          />
          <Route
                    component={[Function]}
                    path="/list/:id/view"
          />
          <Route
                    component={[Function]}
                    path="/list"
          />
          <Route
                    component={[Function]}
                    path="/project/all"
          />
          <Route
                    component={[Function]}
                    path="/project/update/:id"
          />
          <Route
                    component={[Function]}
                    path="/project/update"
          />
</Switch>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Main />,
}
`;
